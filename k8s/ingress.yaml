apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sightedit-ingress
  namespace: sightedit
  labels:
    app.kubernetes.io/name: sightedit
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: ingress
  annotations:
    # AWS Load Balancer Controller annotations
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/healthcheck-path: /health
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '30'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '3'
    
    # SSL and Security
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:ACCOUNT:certificate/CERTIFICATE-ID
    alb.ingress.kubernetes.io/ssl-policy: ELBSecurityPolicy-TLS-1-2-2017-01
    
    # Load balancer attributes
    alb.ingress.kubernetes.io/load-balancer-attributes: |
      routing.http2.enabled=true,
      idle_timeout.timeout_seconds=60,
      access_logs.s3.enabled=true,
      access_logs.s3.bucket=sightedit-alb-logs,
      access_logs.s3.prefix=ingress
    
    # Rate limiting
    alb.ingress.kubernetes.io/wafv2-acl-arn: arn:aws:wafv2:us-west-2:ACCOUNT:regional/webacl/sightedit-waf/WEB-ACL-ID
    
    # Tags
    alb.ingress.kubernetes.io/tags: |
      Environment=production,
      Project=SightEdit,
      ManagedBy=kubernetes
    
    # External DNS (if using)
    external-dns.alpha.kubernetes.io/hostname: api.sightedit.com

spec:
  tls:
  - hosts:
    - api.sightedit.com
    - cdn.sightedit.com
    secretName: sightedit-tls
  
  rules:
  # API endpoints
  - host: api.sightedit.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sightedit-backend-service
            port:
              number: 3000
  
  # CDN endpoints
  - host: cdn.sightedit.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sightedit-cdn-service
            port:
              number: 80

---
# Internal ingress for monitoring services
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sightedit-monitoring-ingress
  namespace: sightedit
  labels:
    app.kubernetes.io/name: sightedit
    app.kubernetes.io/instance: production
    app.kubernetes.io/component: monitoring
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internal
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-west-2:ACCOUNT:certificate/CERTIFICATE-ID
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    
    # Basic authentication for monitoring endpoints
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'SightEdit Monitoring'
    
    # IP whitelist for internal access
    alb.ingress.kubernetes.io/inbound-cidrs: 10.0.0.0/8,172.16.0.0/12,192.168.0.0/16

spec:
  tls:
  - hosts:
    - monitoring.sightedit.internal
    secretName: sightedit-tls
  
  rules:
  - host: monitoring.sightedit.internal
    http:
      paths:
      # Prometheus
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus-server
            port:
              number: 80
      
      # Grafana
      - path: /grafana
        pathType: Prefix
        backend:
          service:
            name: grafana
            port:
              number: 3000
      
      # Alertmanager
      - path: /alertmanager
        pathType: Prefix
        backend:
          service:
            name: alertmanager
            port:
              number: 9093
      
      # Jaeger
      - path: /jaeger
        pathType: Prefix
        backend:
          service:
            name: jaeger-query
            port:
              number: 16686